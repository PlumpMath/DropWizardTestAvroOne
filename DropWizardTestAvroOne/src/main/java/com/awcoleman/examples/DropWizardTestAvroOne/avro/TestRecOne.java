/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.awcoleman.examples.DropWizardTestAvroOne.avro;  
@SuppressWarnings("all")
/** Created for the DropWizardTestAvroOne test application */
@org.apache.avro.specific.AvroGenerated
public class TestRecOne extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TestRecOne\",\"namespace\":\"com.awcoleman.examples.DropWizardTestAvroOne.avro\",\"doc\":\"Created for the DropWizardTestAvroOne test application\",\"fields\":[{\"name\":\"datasetID\",\"type\":\"string\"},{\"name\":\"recordID\",\"type\":\"long\"},{\"name\":\"fieldOne\",\"type\":\"boolean\"},{\"name\":\"fieldTwo\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"fieldThree\",\"type\":\"int\"},{\"name\":\"fieldFour\",\"type\":\"long\"},{\"name\":\"fieldFive\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"fieldSix\",\"type\":\"float\"},{\"name\":\"fieldSeven\",\"type\":[\"null\",\"float\"]},{\"name\":\"fieldEight\",\"type\":\"double\"},{\"name\":\"fieldNine\",\"type\":[\"null\",\"double\"]},{\"name\":\"fieldTen\",\"type\":\"string\"},{\"name\":\"fieldEleven\",\"type\":[\"null\",\"string\"]},{\"name\":\"fieldTwelve\",\"type\":\"string\"},{\"name\":\"fieldThirteen\",\"type\":[\"null\",\"string\"]}],\"schemaLastUpdateDate\":\"20150614\",\"schemaLastUpdateBy\":\"awcoleman\",\"notes\":\"Not including type bytes example field since Hive jdbc does not support getBytes\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence datasetID;
  @Deprecated public long recordID;
  @Deprecated public boolean fieldOne;
  @Deprecated public java.lang.Boolean fieldTwo;
  @Deprecated public int fieldThree;
  @Deprecated public long fieldFour;
  @Deprecated public java.lang.Long fieldFive;
  @Deprecated public float fieldSix;
  @Deprecated public java.lang.Float fieldSeven;
  @Deprecated public double fieldEight;
  @Deprecated public java.lang.Double fieldNine;
  @Deprecated public java.lang.CharSequence fieldTen;
  @Deprecated public java.lang.CharSequence fieldEleven;
  @Deprecated public java.lang.CharSequence fieldTwelve;
  @Deprecated public java.lang.CharSequence fieldThirteen;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TestRecOne() {}

  /**
   * All-args constructor.
   */
  public TestRecOne(java.lang.CharSequence datasetID, java.lang.Long recordID, java.lang.Boolean fieldOne, java.lang.Boolean fieldTwo, java.lang.Integer fieldThree, java.lang.Long fieldFour, java.lang.Long fieldFive, java.lang.Float fieldSix, java.lang.Float fieldSeven, java.lang.Double fieldEight, java.lang.Double fieldNine, java.lang.CharSequence fieldTen, java.lang.CharSequence fieldEleven, java.lang.CharSequence fieldTwelve, java.lang.CharSequence fieldThirteen) {
    this.datasetID = datasetID;
    this.recordID = recordID;
    this.fieldOne = fieldOne;
    this.fieldTwo = fieldTwo;
    this.fieldThree = fieldThree;
    this.fieldFour = fieldFour;
    this.fieldFive = fieldFive;
    this.fieldSix = fieldSix;
    this.fieldSeven = fieldSeven;
    this.fieldEight = fieldEight;
    this.fieldNine = fieldNine;
    this.fieldTen = fieldTen;
    this.fieldEleven = fieldEleven;
    this.fieldTwelve = fieldTwelve;
    this.fieldThirteen = fieldThirteen;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return datasetID;
    case 1: return recordID;
    case 2: return fieldOne;
    case 3: return fieldTwo;
    case 4: return fieldThree;
    case 5: return fieldFour;
    case 6: return fieldFive;
    case 7: return fieldSix;
    case 8: return fieldSeven;
    case 9: return fieldEight;
    case 10: return fieldNine;
    case 11: return fieldTen;
    case 12: return fieldEleven;
    case 13: return fieldTwelve;
    case 14: return fieldThirteen;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: datasetID = (java.lang.CharSequence)value$; break;
    case 1: recordID = (java.lang.Long)value$; break;
    case 2: fieldOne = (java.lang.Boolean)value$; break;
    case 3: fieldTwo = (java.lang.Boolean)value$; break;
    case 4: fieldThree = (java.lang.Integer)value$; break;
    case 5: fieldFour = (java.lang.Long)value$; break;
    case 6: fieldFive = (java.lang.Long)value$; break;
    case 7: fieldSix = (java.lang.Float)value$; break;
    case 8: fieldSeven = (java.lang.Float)value$; break;
    case 9: fieldEight = (java.lang.Double)value$; break;
    case 10: fieldNine = (java.lang.Double)value$; break;
    case 11: fieldTen = (java.lang.CharSequence)value$; break;
    case 12: fieldEleven = (java.lang.CharSequence)value$; break;
    case 13: fieldTwelve = (java.lang.CharSequence)value$; break;
    case 14: fieldThirteen = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'datasetID' field.
   */
  public java.lang.CharSequence getDatasetID() {
    return datasetID;
  }

  /**
   * Sets the value of the 'datasetID' field.
   * @param value the value to set.
   */
  public void setDatasetID(java.lang.CharSequence value) {
    this.datasetID = value;
  }

  /**
   * Gets the value of the 'recordID' field.
   */
  public java.lang.Long getRecordID() {
    return recordID;
  }

  /**
   * Sets the value of the 'recordID' field.
   * @param value the value to set.
   */
  public void setRecordID(java.lang.Long value) {
    this.recordID = value;
  }

  /**
   * Gets the value of the 'fieldOne' field.
   */
  public java.lang.Boolean getFieldOne() {
    return fieldOne;
  }

  /**
   * Sets the value of the 'fieldOne' field.
   * @param value the value to set.
   */
  public void setFieldOne(java.lang.Boolean value) {
    this.fieldOne = value;
  }

  /**
   * Gets the value of the 'fieldTwo' field.
   */
  public java.lang.Boolean getFieldTwo() {
    return fieldTwo;
  }

  /**
   * Sets the value of the 'fieldTwo' field.
   * @param value the value to set.
   */
  public void setFieldTwo(java.lang.Boolean value) {
    this.fieldTwo = value;
  }

  /**
   * Gets the value of the 'fieldThree' field.
   */
  public java.lang.Integer getFieldThree() {
    return fieldThree;
  }

  /**
   * Sets the value of the 'fieldThree' field.
   * @param value the value to set.
   */
  public void setFieldThree(java.lang.Integer value) {
    this.fieldThree = value;
  }

  /**
   * Gets the value of the 'fieldFour' field.
   */
  public java.lang.Long getFieldFour() {
    return fieldFour;
  }

  /**
   * Sets the value of the 'fieldFour' field.
   * @param value the value to set.
   */
  public void setFieldFour(java.lang.Long value) {
    this.fieldFour = value;
  }

  /**
   * Gets the value of the 'fieldFive' field.
   */
  public java.lang.Long getFieldFive() {
    return fieldFive;
  }

  /**
   * Sets the value of the 'fieldFive' field.
   * @param value the value to set.
   */
  public void setFieldFive(java.lang.Long value) {
    this.fieldFive = value;
  }

  /**
   * Gets the value of the 'fieldSix' field.
   */
  public java.lang.Float getFieldSix() {
    return fieldSix;
  }

  /**
   * Sets the value of the 'fieldSix' field.
   * @param value the value to set.
   */
  public void setFieldSix(java.lang.Float value) {
    this.fieldSix = value;
  }

  /**
   * Gets the value of the 'fieldSeven' field.
   */
  public java.lang.Float getFieldSeven() {
    return fieldSeven;
  }

  /**
   * Sets the value of the 'fieldSeven' field.
   * @param value the value to set.
   */
  public void setFieldSeven(java.lang.Float value) {
    this.fieldSeven = value;
  }

  /**
   * Gets the value of the 'fieldEight' field.
   */
  public java.lang.Double getFieldEight() {
    return fieldEight;
  }

  /**
   * Sets the value of the 'fieldEight' field.
   * @param value the value to set.
   */
  public void setFieldEight(java.lang.Double value) {
    this.fieldEight = value;
  }

  /**
   * Gets the value of the 'fieldNine' field.
   */
  public java.lang.Double getFieldNine() {
    return fieldNine;
  }

  /**
   * Sets the value of the 'fieldNine' field.
   * @param value the value to set.
   */
  public void setFieldNine(java.lang.Double value) {
    this.fieldNine = value;
  }

  /**
   * Gets the value of the 'fieldTen' field.
   */
  public java.lang.CharSequence getFieldTen() {
    return fieldTen;
  }

  /**
   * Sets the value of the 'fieldTen' field.
   * @param value the value to set.
   */
  public void setFieldTen(java.lang.CharSequence value) {
    this.fieldTen = value;
  }

  /**
   * Gets the value of the 'fieldEleven' field.
   */
  public java.lang.CharSequence getFieldEleven() {
    return fieldEleven;
  }

  /**
   * Sets the value of the 'fieldEleven' field.
   * @param value the value to set.
   */
  public void setFieldEleven(java.lang.CharSequence value) {
    this.fieldEleven = value;
  }

  /**
   * Gets the value of the 'fieldTwelve' field.
   */
  public java.lang.CharSequence getFieldTwelve() {
    return fieldTwelve;
  }

  /**
   * Sets the value of the 'fieldTwelve' field.
   * @param value the value to set.
   */
  public void setFieldTwelve(java.lang.CharSequence value) {
    this.fieldTwelve = value;
  }

  /**
   * Gets the value of the 'fieldThirteen' field.
   */
  public java.lang.CharSequence getFieldThirteen() {
    return fieldThirteen;
  }

  /**
   * Sets the value of the 'fieldThirteen' field.
   * @param value the value to set.
   */
  public void setFieldThirteen(java.lang.CharSequence value) {
    this.fieldThirteen = value;
  }

  /** Creates a new TestRecOne RecordBuilder */
  public static com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder newBuilder() {
    return new com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder();
  }
  
  /** Creates a new TestRecOne RecordBuilder by copying an existing Builder */
  public static com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder newBuilder(com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder other) {
    return new com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder(other);
  }
  
  /** Creates a new TestRecOne RecordBuilder by copying an existing TestRecOne instance */
  public static com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder newBuilder(com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne other) {
    return new com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder(other);
  }
  
  /**
   * RecordBuilder for TestRecOne instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TestRecOne>
    implements org.apache.avro.data.RecordBuilder<TestRecOne> {

    private java.lang.CharSequence datasetID;
    private long recordID;
    private boolean fieldOne;
    private java.lang.Boolean fieldTwo;
    private int fieldThree;
    private long fieldFour;
    private java.lang.Long fieldFive;
    private float fieldSix;
    private java.lang.Float fieldSeven;
    private double fieldEight;
    private java.lang.Double fieldNine;
    private java.lang.CharSequence fieldTen;
    private java.lang.CharSequence fieldEleven;
    private java.lang.CharSequence fieldTwelve;
    private java.lang.CharSequence fieldThirteen;

    /** Creates a new Builder */
    private Builder() {
      super(com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.datasetID)) {
        this.datasetID = data().deepCopy(fields()[0].schema(), other.datasetID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.recordID)) {
        this.recordID = data().deepCopy(fields()[1].schema(), other.recordID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fieldOne)) {
        this.fieldOne = data().deepCopy(fields()[2].schema(), other.fieldOne);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fieldTwo)) {
        this.fieldTwo = data().deepCopy(fields()[3].schema(), other.fieldTwo);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fieldThree)) {
        this.fieldThree = data().deepCopy(fields()[4].schema(), other.fieldThree);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fieldFour)) {
        this.fieldFour = data().deepCopy(fields()[5].schema(), other.fieldFour);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fieldFive)) {
        this.fieldFive = data().deepCopy(fields()[6].schema(), other.fieldFive);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.fieldSix)) {
        this.fieldSix = data().deepCopy(fields()[7].schema(), other.fieldSix);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.fieldSeven)) {
        this.fieldSeven = data().deepCopy(fields()[8].schema(), other.fieldSeven);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.fieldEight)) {
        this.fieldEight = data().deepCopy(fields()[9].schema(), other.fieldEight);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fieldNine)) {
        this.fieldNine = data().deepCopy(fields()[10].schema(), other.fieldNine);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.fieldTen)) {
        this.fieldTen = data().deepCopy(fields()[11].schema(), other.fieldTen);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.fieldEleven)) {
        this.fieldEleven = data().deepCopy(fields()[12].schema(), other.fieldEleven);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.fieldTwelve)) {
        this.fieldTwelve = data().deepCopy(fields()[13].schema(), other.fieldTwelve);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.fieldThirteen)) {
        this.fieldThirteen = data().deepCopy(fields()[14].schema(), other.fieldThirteen);
        fieldSetFlags()[14] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TestRecOne instance */
    private Builder(com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne other) {
            super(com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.SCHEMA$);
      if (isValidValue(fields()[0], other.datasetID)) {
        this.datasetID = data().deepCopy(fields()[0].schema(), other.datasetID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.recordID)) {
        this.recordID = data().deepCopy(fields()[1].schema(), other.recordID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fieldOne)) {
        this.fieldOne = data().deepCopy(fields()[2].schema(), other.fieldOne);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fieldTwo)) {
        this.fieldTwo = data().deepCopy(fields()[3].schema(), other.fieldTwo);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fieldThree)) {
        this.fieldThree = data().deepCopy(fields()[4].schema(), other.fieldThree);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fieldFour)) {
        this.fieldFour = data().deepCopy(fields()[5].schema(), other.fieldFour);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fieldFive)) {
        this.fieldFive = data().deepCopy(fields()[6].schema(), other.fieldFive);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.fieldSix)) {
        this.fieldSix = data().deepCopy(fields()[7].schema(), other.fieldSix);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.fieldSeven)) {
        this.fieldSeven = data().deepCopy(fields()[8].schema(), other.fieldSeven);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.fieldEight)) {
        this.fieldEight = data().deepCopy(fields()[9].schema(), other.fieldEight);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fieldNine)) {
        this.fieldNine = data().deepCopy(fields()[10].schema(), other.fieldNine);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.fieldTen)) {
        this.fieldTen = data().deepCopy(fields()[11].schema(), other.fieldTen);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.fieldEleven)) {
        this.fieldEleven = data().deepCopy(fields()[12].schema(), other.fieldEleven);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.fieldTwelve)) {
        this.fieldTwelve = data().deepCopy(fields()[13].schema(), other.fieldTwelve);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.fieldThirteen)) {
        this.fieldThirteen = data().deepCopy(fields()[14].schema(), other.fieldThirteen);
        fieldSetFlags()[14] = true;
      }
    }

    /** Gets the value of the 'datasetID' field */
    public java.lang.CharSequence getDatasetID() {
      return datasetID;
    }
    
    /** Sets the value of the 'datasetID' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setDatasetID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.datasetID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetID' field has been set */
    public boolean hasDatasetID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'datasetID' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearDatasetID() {
      datasetID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'recordID' field */
    public java.lang.Long getRecordID() {
      return recordID;
    }
    
    /** Sets the value of the 'recordID' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setRecordID(long value) {
      validate(fields()[1], value);
      this.recordID = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'recordID' field has been set */
    public boolean hasRecordID() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'recordID' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearRecordID() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'fieldOne' field */
    public java.lang.Boolean getFieldOne() {
      return fieldOne;
    }
    
    /** Sets the value of the 'fieldOne' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldOne(boolean value) {
      validate(fields()[2], value);
      this.fieldOne = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldOne' field has been set */
    public boolean hasFieldOne() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'fieldOne' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldOne() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'fieldTwo' field */
    public java.lang.Boolean getFieldTwo() {
      return fieldTwo;
    }
    
    /** Sets the value of the 'fieldTwo' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldTwo(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.fieldTwo = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldTwo' field has been set */
    public boolean hasFieldTwo() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'fieldTwo' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldTwo() {
      fieldTwo = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'fieldThree' field */
    public java.lang.Integer getFieldThree() {
      return fieldThree;
    }
    
    /** Sets the value of the 'fieldThree' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldThree(int value) {
      validate(fields()[4], value);
      this.fieldThree = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldThree' field has been set */
    public boolean hasFieldThree() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'fieldThree' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldThree() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'fieldFour' field */
    public java.lang.Long getFieldFour() {
      return fieldFour;
    }
    
    /** Sets the value of the 'fieldFour' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldFour(long value) {
      validate(fields()[5], value);
      this.fieldFour = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldFour' field has been set */
    public boolean hasFieldFour() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'fieldFour' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldFour() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'fieldFive' field */
    public java.lang.Long getFieldFive() {
      return fieldFive;
    }
    
    /** Sets the value of the 'fieldFive' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldFive(java.lang.Long value) {
      validate(fields()[6], value);
      this.fieldFive = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldFive' field has been set */
    public boolean hasFieldFive() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'fieldFive' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldFive() {
      fieldFive = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'fieldSix' field */
    public java.lang.Float getFieldSix() {
      return fieldSix;
    }
    
    /** Sets the value of the 'fieldSix' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldSix(float value) {
      validate(fields()[7], value);
      this.fieldSix = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldSix' field has been set */
    public boolean hasFieldSix() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'fieldSix' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldSix() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'fieldSeven' field */
    public java.lang.Float getFieldSeven() {
      return fieldSeven;
    }
    
    /** Sets the value of the 'fieldSeven' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldSeven(java.lang.Float value) {
      validate(fields()[8], value);
      this.fieldSeven = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldSeven' field has been set */
    public boolean hasFieldSeven() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'fieldSeven' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldSeven() {
      fieldSeven = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'fieldEight' field */
    public java.lang.Double getFieldEight() {
      return fieldEight;
    }
    
    /** Sets the value of the 'fieldEight' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldEight(double value) {
      validate(fields()[9], value);
      this.fieldEight = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldEight' field has been set */
    public boolean hasFieldEight() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'fieldEight' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldEight() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'fieldNine' field */
    public java.lang.Double getFieldNine() {
      return fieldNine;
    }
    
    /** Sets the value of the 'fieldNine' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldNine(java.lang.Double value) {
      validate(fields()[10], value);
      this.fieldNine = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldNine' field has been set */
    public boolean hasFieldNine() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'fieldNine' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldNine() {
      fieldNine = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'fieldTen' field */
    public java.lang.CharSequence getFieldTen() {
      return fieldTen;
    }
    
    /** Sets the value of the 'fieldTen' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldTen(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.fieldTen = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldTen' field has been set */
    public boolean hasFieldTen() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'fieldTen' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldTen() {
      fieldTen = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'fieldEleven' field */
    public java.lang.CharSequence getFieldEleven() {
      return fieldEleven;
    }
    
    /** Sets the value of the 'fieldEleven' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldEleven(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.fieldEleven = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldEleven' field has been set */
    public boolean hasFieldEleven() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'fieldEleven' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldEleven() {
      fieldEleven = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'fieldTwelve' field */
    public java.lang.CharSequence getFieldTwelve() {
      return fieldTwelve;
    }
    
    /** Sets the value of the 'fieldTwelve' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldTwelve(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.fieldTwelve = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldTwelve' field has been set */
    public boolean hasFieldTwelve() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'fieldTwelve' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldTwelve() {
      fieldTwelve = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'fieldThirteen' field */
    public java.lang.CharSequence getFieldThirteen() {
      return fieldThirteen;
    }
    
    /** Sets the value of the 'fieldThirteen' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder setFieldThirteen(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.fieldThirteen = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'fieldThirteen' field has been set */
    public boolean hasFieldThirteen() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'fieldThirteen' field */
    public com.awcoleman.examples.DropWizardTestAvroOne.avro.TestRecOne.Builder clearFieldThirteen() {
      fieldThirteen = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    public TestRecOne build() {
      try {
        TestRecOne record = new TestRecOne();
        record.datasetID = fieldSetFlags()[0] ? this.datasetID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.recordID = fieldSetFlags()[1] ? this.recordID : (java.lang.Long) defaultValue(fields()[1]);
        record.fieldOne = fieldSetFlags()[2] ? this.fieldOne : (java.lang.Boolean) defaultValue(fields()[2]);
        record.fieldTwo = fieldSetFlags()[3] ? this.fieldTwo : (java.lang.Boolean) defaultValue(fields()[3]);
        record.fieldThree = fieldSetFlags()[4] ? this.fieldThree : (java.lang.Integer) defaultValue(fields()[4]);
        record.fieldFour = fieldSetFlags()[5] ? this.fieldFour : (java.lang.Long) defaultValue(fields()[5]);
        record.fieldFive = fieldSetFlags()[6] ? this.fieldFive : (java.lang.Long) defaultValue(fields()[6]);
        record.fieldSix = fieldSetFlags()[7] ? this.fieldSix : (java.lang.Float) defaultValue(fields()[7]);
        record.fieldSeven = fieldSetFlags()[8] ? this.fieldSeven : (java.lang.Float) defaultValue(fields()[8]);
        record.fieldEight = fieldSetFlags()[9] ? this.fieldEight : (java.lang.Double) defaultValue(fields()[9]);
        record.fieldNine = fieldSetFlags()[10] ? this.fieldNine : (java.lang.Double) defaultValue(fields()[10]);
        record.fieldTen = fieldSetFlags()[11] ? this.fieldTen : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.fieldEleven = fieldSetFlags()[12] ? this.fieldEleven : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.fieldTwelve = fieldSetFlags()[13] ? this.fieldTwelve : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.fieldThirteen = fieldSetFlags()[14] ? this.fieldThirteen : (java.lang.CharSequence) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
